name: Zappy Dev CI
on:
  push:
    branches:
      - dev
  pull_request:
    branches:
      - dev

jobs:
  check_repo:
    name: "Check if the repo is clean"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - id: check_repo
        run: |
          BAD_FILES=$(find . -type f -not -path "./.git/*" -wholename "*tmp/*" -or -name "*~" -or -name "*.o" -or -name "*.a" -or -name "*.so" -or -name "*.gcno" -or -name "*.gdca" -or -name "*.gcov")
          for FILES in $BAD_FILES; do
            echo "::error file=${FILE#./}, title=Unwanted file detected::${FILE#./}"
          done
          if [ "$BAD_FILES" != ""]; then
            exit 1
          fi

  check_coding_style:
    runs-on: ubuntu-latest
    container: ghcr.io/epitech/coding-style-checker:latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Run coding style checker
        run: |
          check.sh $(pwd) $(pwd)
          while IFS= read -r line; do
            file=$(echo "$line" | awk -F ':' '{print $1}')
            line_number=$(echo "$line" | awk -F ':' '{print $2}')
            severity=$(echo "$line" | awk -F ':' '{print $3}')
            message=$(echo "$line" | awk -F ':' '{print $4}')
            echo "::error file=$file,line=$line_number::$severity $message"
          done < coding-style-reports.log
          line_count=$(wc -l coding-style-reports.log | awk '{print $1}')
          if [ "$line_count" -gt 6 ]; then
            echo "::error::Too many style errors"
            exit 1
          fi

  #compile:
  #  needs: check_coding_style
  #  runs-on: ubuntu-latest
  #  container: epitechcontent/epitest-docker
  #  steps:
  #    - name: Checkout repository
  #      uses: actions/checkout@v4

  #    - name: Compile program
  #      run: make

  #    - name: Check executables
  #      run: |
  #        IFS=',' read -ra exec_paths <<< "${EXECUTABLES}"
  #        for exec_path in "${exec_paths[@]}"; do
  #          [ -x "$exec_path" ] || exit 1
  #        done

  #    - name: Clean
  #      run: make fclean
